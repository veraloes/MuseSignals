buildscript {
    repositories { maven {
        url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "gradle.plugin.com.github.spotbugs.snom:spotbugs-gradle-plugin:4.3.0" }
}

plugins {
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id "com.github.spotbugs" version "4.3.0"
}
apply plugin: "com.github.spotbugs"

group = 'com.michalska'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

description = """
Example project for a Gradle build

Project name: ${project.name}

Project stream signal from Muse 2 EEG headband """

//defaultTasks 'clean', 'check'

task hello {
    doLast {
        println 'Hello'
    }
}

test {
    useJUnitPlatform()
}

sourceSets {
// we define `main` sourceSet here, so SpotBugs Gradle Plugin generates `spotbugsMain` task
    main {
        java.srcDirs = ['src/main/java']
    }
}

//tasks.withType(com.github.spotbugs.SpotBugsTask) {
//    }


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly 'org.projectlombok:lombok'
    compile 'org.threeten:threetenbp:1.4.4'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    compile 'com.opencsv:opencsv:4.5'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testCompile 'junit:junit:4.12'
    testCompile("org.assertj:assertj-core:3.11.1")
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.10.1'
}